// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./data.db"
}

model User {
  id             Int              @id @default(autoincrement())
  email          String           @unique
  password       String
  name           String
  role           String           @default("USER")
  profile        Profile?
  jobApplication JobApplication[]
  reviews        Review[]
}

model Profile {
  id     Int    @id @default(autoincrement())
  bio    String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId Int    @unique
}

model Job {
  id             Int              @id @default(autoincrement())
  title          String
  location       String
  details        Detail[]
  jobSummary     String
  jobDescription String
  createdAt      DateTime         @default(now())
  company        Company          @relation(fields: [companyId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  companyId      Int
  jobApplication JobApplication[]
}

model Detail {
  id      Int    @id @default(autoincrement())
  job     Job    @relation(fields: [jobId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  jobId   Int
  content String @unique
}

model JobApplication {
  id        Int      @id @default(autoincrement())
  job       Job      @relation(fields: [jobId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  jobId     Int
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId    Int
}

model Company {
  id       Int      @id @default(autoincrement())
  name     String
  imageURL String?
  rating   Int
  about    String
  address  String
  email    String
  website  String
  reviews  Review[]
  jobs     Job[]
}

model Review {
  id        Int      @id @default(autoincrement())
  company   Company  @relation(fields: [companyId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  companyId Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId    Int
  rating    Int
  content   String
  createdAt DateTime @default(now())
}
